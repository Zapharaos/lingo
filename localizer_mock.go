// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Zapharaos/lingo (interfaces: LocalizerService)
//
// Generated by this command:
//
//	mockgen -destination=localizer_mock.go -package=lingo . LocalizerService
//

// Package lingo is a generated GoMock package.
package lingo

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	language "golang.org/x/text/language"
)

// MockLocalizerService is a mock of LocalizerService interface.
type MockLocalizerService struct {
	ctrl     *gomock.Controller
	recorder *MockLocalizerServiceMockRecorder
	isgomock struct{}
}

// MockLocalizerServiceMockRecorder is the mock recorder for MockLocalizerService.
type MockLocalizerServiceMockRecorder struct {
	mock *MockLocalizerService
}

// NewMockLocalizerService creates a new mock instance.
func NewMockLocalizerService(ctrl *gomock.Controller) *MockLocalizerService {
	mock := &MockLocalizerService{ctrl: ctrl}
	mock.recorder = &MockLocalizerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocalizerService) EXPECT() *MockLocalizerServiceMockRecorder {
	return m.recorder
}

// GetLocalizer mocks base method.
func (m *MockLocalizerService) GetLocalizer(arg0 language.Tag) (any, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocalizer", arg0)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLocalizer indicates an expected call of GetLocalizer.
func (mr *MockLocalizerServiceMockRecorder) GetLocalizer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocalizer", reflect.TypeOf((*MockLocalizerService)(nil).GetLocalizer), arg0)
}

// MustTranslate mocks base method.
func (m *MockLocalizerService) MustTranslate(localizer any, message *Message) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MustTranslate", localizer, message)
	ret0, _ := ret[0].(string)
	return ret0
}

// MustTranslate indicates an expected call of MustTranslate.
func (mr *MockLocalizerServiceMockRecorder) MustTranslate(localizer, message any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MustTranslate", reflect.TypeOf((*MockLocalizerService)(nil).MustTranslate), localizer, message)
}

// Translate mocks base method.
func (m *MockLocalizerService) Translate(localizer any, message *Message) (string, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Translate", localizer, message)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Translate indicates an expected call of Translate.
func (mr *MockLocalizerServiceMockRecorder) Translate(localizer, message any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Translate", reflect.TypeOf((*MockLocalizerService)(nil).Translate), localizer, message)
}
